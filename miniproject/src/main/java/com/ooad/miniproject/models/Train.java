package com.ooad.miniproject.models;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.Field;
import java.time.LocalDateTime;
import java.util.Map;
import java.util.Arrays;

@Document(collection = "trains")
public class Train {
    @Id
    private String id; // Auto-generated by MongoDB

    private String number; // Train number (e.g., "12951")
    private String name;   // Train name (e.g., "Rajdhani Express")
    private Schedule schedule;
    private Stations stations;
    private Map<String, SeatClass> seats; // Seat classes with availability
    private String status; // "SCHEDULED", "DELAYED", "DEPARTED", "ARRIVED", "CANCELLED"

    // Nested Classes
    public static class Schedule {
        private LocalDateTime departureTime;
        private LocalDateTime arrivalTime;

        // Getters and Setters
        public LocalDateTime getDepartureTime() { return departureTime; }
        public void setDepartureTime(LocalDateTime departureTime) { this.departureTime = departureTime; }

        public LocalDateTime getArrivalTime() { return arrivalTime; }
        public void setArrivalTime(LocalDateTime arrivalTime) { this.arrivalTime = arrivalTime; }
    }

    public static class Stations {
        private String departureStationCode; // e.g., "NDLS"
        private String arrivalStationCode;   // e.g., "CSTM"
        
        // Getters and Setters
        public String getDepartureStationCode() { return departureStationCode; }
        public void setDepartureStationCode(String departureStationCode) { 
            this.departureStationCode = departureStationCode; 
        }
        
        public String getArrivalStationCode() { return arrivalStationCode; }
        public void setArrivalStationCode(String arrivalStationCode) { 
            this.arrivalStationCode = arrivalStationCode; 
        }
    }

    public static class SeatClass {
        private int totalSeats;
        private double price;

        @Field("availableSeats") // Ensure this field is persisted in MongoDB
        private boolean[] availableSeats; // Index represents seat number
        
        // Getters and Setters
        public int getTotalSeats() { return totalSeats; }
        public void setTotalSeats(int totalSeats) { 
            this.totalSeats = totalSeats;
            this.availableSeats = new boolean[totalSeats];
            Arrays.fill(availableSeats, true);
        }
        
        public double getPrice() { return price; }
        public void setPrice(double price) { this.price = price; }
        
        public boolean isSeatAvailable(int seatNumber) {
            return availableSeats[seatNumber - 1]; // Seats are 1-indexed
        }
        
        public void bookSeat(int seatNumber) {
            availableSeats[seatNumber - 1] = false;
        }

        public void freeSeat(int seatNumber) {
            availableSeats[seatNumber - 1] = true; // Seats are 1-indexed
        }

        public int getAvailableSeats() {
            return (int) java.util.stream.IntStream.range(0, availableSeats.length)
                    .filter(i -> availableSeats[i])
                    .count();
        }

        public boolean[] getAvailableSeatsArray() {
            return availableSeats;
        }
    }

    // Constructors
    public Train() {}

    public Train(String number, String name) {
        this.number = number;
        this.name = name;
        this.status = "SCHEDULED";
    }

    // Getters and Setters
    public String getId() { return id; }
    public void setId(String id) { this.id = id; }
    
    public String getNumber() { return number; }
    public void setNumber(String number) { this.number = number; }
    
    public String getName() { return name; }
    public void setName(String name) { this.name = name; }
    
    public Schedule getSchedule() { return schedule; }
    public void setSchedule(Schedule schedule) { this.schedule = schedule; }
    
    public Stations getStations() { return stations; }
    public void setStations(Stations stations) { this.stations = stations; }
    
    public Map<String, SeatClass> getSeats() { return seats; }
    public void setSeats(Map<String, SeatClass> seats) { this.seats = seats; }
    
    public String getStatus() { return status; }
    public void setStatus(String status) { this.status = status; }

    // Business Logic Methods
    public boolean isSeatAvailable(String seatClass, int seatNumber) {
        return seats.containsKey(seatClass) && 
               seats.get(seatClass).isSeatAvailable(seatNumber);
    }

    public void bookSeat(String seatClass, int seatNumber) {
        if (isSeatAvailable(seatClass, seatNumber)) {
            seats.get(seatClass).bookSeat(seatNumber);
        } else {
            throw new IllegalStateException("Seat not available");
        }
    }

    @Override
    public String toString() {
        return "Train{" +
                "id='" + id + '\'' +
                ", number='" + number + '\'' +
                ", name='" + name + '\'' +
                ", status='" + status + '\'' +
                '}';
    }
}